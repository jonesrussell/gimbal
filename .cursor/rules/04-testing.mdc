---
description:
globs:
alwaysApply: false
---
# Testing Standards and Guidelines

## Test Package Structure
- Write tests in separate `_test` packages
- Organize test files to mirror the structure of the code they test
- Keep test utilities and helpers in a `testutil` package

## Test Execution
- Use `t.Parallel()` for tests that can run concurrently
- Ensure proper test isolation
- Clean up test resources properly
- Use test suites when appropriate

## Assertions and Verification
- Use `require` package for assertions that should stop test execution
- Use `assert` package for non-critical assertions
- Apply consistent assertion patterns across tests
- Use `testify` suite for structured test organization

## Test Coverage
- Aim for comprehensive test coverage
- Include edge cases and error conditions
- Test both positive and negative scenarios
- Write integration tests for critical paths

## Linting Exceptions
The following linters are disabled for `_test.go` files:
- bodyclose
- dupl
- errcheck
- funlen
- goconst
- gosec
- noctx
- wrapcheck

See also:
- [Error Handling Guidelines](mdc:03-error-handling.mdc)
- [Code Organization](mdc:01-code-organization.mdc)
