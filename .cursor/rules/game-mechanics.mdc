# Game Mechanics for Gyruss-Style Game

## Player Movement
- Player moves in orbital path around screen center
- Use angle-based movement with positive angles for clockwise rotation
- Movement speed controlled by `AngleStep` in configuration
- Player position calculated from orbital angle and radius

## Starfield System
- Stars move radially outward from center
- Stars scale up as they move away from center
- Stars reset when they reach screen boundaries
- Use [internal/ecs/starfield.go](mdc:internal/ecs/starfield.go) for star management

## Coordinate System
- Screen center is (0,0) for game logic
- Use polar coordinates for orbital movement
- Convert to Cartesian coordinates for rendering
- Positive Y is downward (Ebiten convention)

## Physics Constants
- Define physics constants in [internal/common/config.go](mdc:internal/common/config.go)
- Use `DefaultRadiusRatio` for orbital radius calculation
- Configure star movement speed and scaling parameters
- Set appropriate angle step for smooth movement

## Input Handling
- Use [internal/input/](mdc:internal/input/) package for input processing
- Support keyboard controls for movement
- Handle pause/resume functionality
- Emit events for input state changes

## Rendering
- Clear screen to black background
- Render entities in proper order (background to foreground)
- Use sprite transformations for rotation and scaling
- Support debug rendering when debug mode is enabled

## Performance Considerations
- Use efficient entity queries for movement systems
- Batch render operations when possible
- Limit star count based on performance requirements
- Use object pooling for frequently created/destroyed entities
description:
globs:
alwaysApply: false
---
