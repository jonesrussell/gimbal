name: Test

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.24.x']
    name: Test with Go ${{ matrix.go }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      DISPLAY: ':99.0'
    defaults:
      run:
        shell: bash
    steps:
      - name: Git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

      - name: Xvfb
        if: runner.os == 'Linux'
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: go vet
        run: |
          go vet ./...

      - name: go build
        run: |
          go build -v ./...
          # Compile without optimization to check potential stack overflow
          go build "-gcflags=all=-N -l" -v ./...
          env GOOS=windows GOARCH=amd64 go build -v ./...

      - name: go build (macOS)
        if: runner.os == 'macOS'
        run: |
          env CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -v ./...

      - name: go test (Linux)
        if: runner.os == 'Linux'
        run: |
          go test -shuffle=on -v -p=1 ./...

      - name: go test (Windows)
        if: runner.os == 'Windows'
        run: |
          go test -shuffle=on -v ./...
          env EBITENGINE_DIRECTX=version=12 go test -shuffle=on -v ./...

      - name: go test (macOS)
        if: runner.os == 'macOS'
        run: |
          go test -shuffle=on -v ./... 