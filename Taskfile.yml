# https://taskfile.dev

version: '3'

vars:
  USERNAME: jonesrussell
  PROJECTNAME: gimbal
  VERSION: v0.1.0
  BINARY_DIR: bin
  BINARY_NAME: gimbal
  WASM_EXEC_PATH: '{{default "$(go env GOROOT)/lib/wasm/wasm_exec.js" .WASM_EXEC_PATH}}'
  ITCH_USERNAME: '{{default "jonesrussell" .ITCH_USERNAME}}'
  ITCH_PATH: gimbal

tasks:
  serve:
    desc: Starts a local server for development
    cmds:
      - |
        if ! command -v wasmserve >/dev/null 2>&1; then
          echo "wasmserve could not be found. You can install it with: go install github.com/hajimehoshi/wasmserve@latest" >&2
          exit 1
        fi
      - echo "Hosting game on http://localhost:4242"
      - cd cmd/gimbal/ && wasmserve -http=":4242" -allow-origin='*' -tags .

  build:linux:
    desc: Build Linux target
    cmds:
      - rm -rf build/linux
      - mkdir -p build/linux/{{.PROJECTNAME}}
      - go build -tags build -o build/linux/{{.PROJECTNAME}}/{{.PROJECTNAME}} ./cmd/gimbal

  build:win32:
    desc: Build Win32 target
    cmds:
      - rm -rf build/win32
      - mkdir -p build/win32/{{.PROJECTNAME}}
      - GOOS=windows go build -tags build -o build/win32/{{.PROJECTNAME}}/{{.PROJECTNAME}}.exe ./cmd/gimbal

  build:web:
    desc: Build WebAssembly target
    cmds:
      - rm -rf build/web
      - mkdir -p build/web
      - GOOS=js GOARCH=wasm go build -tags "build,js" -o build/web/game.wasm ./cmd/gimbal
      - cp -r html/* build/web
      - |
        if [ ! -f {{.WASM_EXEC_PATH}} ]; then
          echo "Error: wasm_exec.js not found at {{.WASM_EXEC_PATH}}"
          echo "Please copy wasm_exec.js from your Go installation to:"
          echo "{{.WASM_EXEC_PATH}}"
          echo "You can find it in your Go installation directory under misc/wasm/wasm_exec.js"
          exit 1
        fi
      - cp {{.WASM_EXEC_PATH}} build/web

  build:
    desc: Build all targets
    deps: [build:linux, build:win32, build:web]

  itch:
    desc: Upload to itch.io
    deps: [clean:build, build]
    cmds:
      - butler push --if-changed build/win32 {{.ITCH_USERNAME}}/{{.ITCH_PATH}}:windows
      - butler push --if-changed build/linux {{.ITCH_USERNAME}}/{{.ITCH_PATH}}:linux-amd64
      - butler push build/web {{.ITCH_USERNAME}}/{{.ITCH_PATH}}:web
      - echo "Project is live on http://{{.ITCH_USERNAME}}.itch.io/{{.ITCH_PATH}}"

  run:
    desc: Run the application
    cmds:
      - go run ./cmd/gimbal

  clean:build:
    desc: Clean build directory
    cmds:
      - rm -rf build

  clean:
    desc: Clean all artifacts
    cmds:
      - task: clean:build
      - rm -rf game.wasm site.zip

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  lint:
    desc: "Lint the Go code"
    cmds:
      - go fmt ./...
      - go vet ./...
      - golangci-lint run ./...
      
  mod:
    desc: Tidy and download Go modules
    cmds:
      - go mod tidy
      - go clean -modcache
      - go mod download

  test:
    desc: "Run the tests"
    cmds:
      - go test -v ./...

  test:cover:
    desc: "Run tests with coverage"
    cmds:
      - mkdir -p coverage
      - go test -coverprofile=coverage/coverage.out ./...
      - go tool cover -html=coverage/coverage.out -o coverage/coverage.html
      - go tool cover -func=coverage/coverage.out
    generates:
      - coverage/coverage.out
      - coverage/coverage.html
